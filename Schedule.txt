1. Break tasks down to <30 minutes chunks. 2. Break day in four, separated by life-admin tasks.
3. Self-declare subtle incapacitation of executive funtion (task initiation function) early -> break.
4. regulate stimulus level by playing lectures in the background.
Monday:
[]Build script to quickly extract past n days of tasks done (50 mins)
    []Get the list of files with the appropriate date range
    []Print each task in chronological order
        []use input() to accept/ reject current task
        []Format as this for the final report:
            -   2022-11-04_14:01:29 -> 14:01:56
                ├───[o]placeholder task
                │       [x]placeholder subtask
                └───[x]Shave
            []end_time = dt.datetime.fromisoformat(file_name)
            []start_time = end_time - dt.timedelta()
            []start_time.isoformat(), "->", end_time.strftime("%h:%m:%s")
    []print a separator line, perhaps a list of "-" or a screenwidth of solid blocks (5 mins)
    []Print the final report (5 mins)
2:32am
Tuesday:
[]fold dried laundry
[]Read Hari's updated version of meeting minutes (~/Downloads) (30 mins)
[]re-write unfolding algorithm to make it normalize at each step
    []Re-do foil-by-foil unfolding
[]What if I just cut away everything with >2 sigmas and see what's left
Wednesday:
[]Consider/plan climbing on Friday! (clashing with Kim's meeting?)
Return from Lake District:
[]Headphone testing
[]Check Reading places to live (1 hour)
    []JC?
[]JD gym w/ Quan
[]Meal prep:
    - chicken, with sauce already produced
    - rice: freeze existing
    - Shave
    - kale/spinach
    - leafy stemmy vegetables
    - spring onions
[]Optimization:
    []New metrics!
        - response matrix that causes the largest covariance minimization?
        - area under cdf(# of sv> threshold vs increasing threshold)?
    []write comb-sum function that takes in a user-define function rather than using "sum" by default
    []Curvature is not as simple as "curvature per bin"! It should be curvature per eV, or PUL?

[]Artur email
Daily task: One novel thing per day:
[]Exercise/hobby: Skatehouse, Fellrunning, Broadfield park, Hangar, Foundry Climbing, Cross Fit Kelham
    []Cyr wheel & Parkour in Nova
        - Ask Sean and others to train w/?
[]One of the following learning things:
    []Social media & Sci+Math tab
    []SeptembRSE https://docs.google.com/spreadsheets/d/1jX9VRxq1gI775YoLQz0lqA4UwDpTbxYpGvqvvZqYtTs/
    []http://software-training.gitpages.ccfe.ac.uk/software-best-practices/#32 (1 hour)
    []https://shuspace.shu.ac.uk/webapps/blackboard/content/listContent.jsp?course_id=_328834_1&content_id=_11976285_1
    []https://ukaeauk-my.sharepoint.com/personal/fulvio_militello_ukaea_uk/_layouts/15/stream.aspx?id=%2Fpersonal%2Ffulvio%5Fmilitello%5Fukaea%5Fuk%2FDocuments%2FRecordings%2FGuest%20Seminar%20%2D%20Michela%20Massimi%20%2D%2D20221003%5F143034%2DMeeting%20Recording%2Emp4&ga=1
    []Clean e-mailboxes
Later:
[]All of the rest of the unfinished ideas in
    - /home/ocean/Documents/PhD/unfinished-work.txt
[]Straighten up sublime package management
[]Reallocate a larger partition to linux (there are SERIOUS consequences if I'm not careful!)
----Make the barrier to doing your fun recreational task as low as possible.
Interesting/recreational/entertaining:
[]Gravel convergence condition
[]Discrete calculus to prove Bateman equation stuff!
    - https://www.youtube.com/watch?v=D0EUFP7-P1M
[]River crossing puzzles: graph theory analysis for optimal strategy in the bridge and torch problem
[]vimtutor
[]Comptuer Science lectures recorded in SHU
[]openmc developer guide https://docs.openmc.org/en/latest/devguide/styleguide.html
[]Read the graduate alumni phone book to find people to talk to about
    []Reading vs Oxford vs Didcot
    []General related hobbies (climbing)
[]Implementation of https://www.shadertoy.com/view/lltcWl with xscreensaver
[]Make arduino stuff: use temperature sensor
[]Use remaining personal items at home
    []build lego puzzle
    []Read remaining books
    []Driver's education

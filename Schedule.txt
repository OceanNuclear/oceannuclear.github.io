1. Break tasks down to <30 minutes chunks.
2. Add barriers to using resources for tasks other than the current one.
3. Break day into four. 4. Regulate stimulus level by playing lectures in BG.
Tuesday:

[]Write quote (tasks/canvas) on paper -> stick on wall
[]Clean shower screen
[]Return trousers
[]DEMOLISH the list of readings in your browser tabs
[]Clean out specific gmail boxes to minimize storage usage
    - e.g. Lots of Amazon emails can be cut, only the receipts need to be kept while the rest (delivery notifications etc.) can go.
[]Thesis: /home/ocean/Self/PhDThesis/Feedback/
Wednesday:
[]Write .rst for neutronics: explanation on neutronics.ex.py
[]Find out from the author of plasma_lib.F90: raise an issue about the
    - Naming of the a_array and s_array
    - the indexing problem: i+ip reaches up to 629, instead of staying bound to <=256
    []`triangulation` should've been renamed to `triangularity`?
        - /home/ocean/Others/pps-isotropic/src/plasma_OpenMC.cpp
        - /home/ocean/Others/pps-isotropic/pps_isotropic/source.py
    []Ask about the L.313 of the tallying file too.
    []Ask about al2o3: mis-typed the number of atoms?
    - explain what's the filter
[]Desktop browswer pinned tabs
[]Fix the fucking native interrupt problem (1 hour) /home/ocean/Documents/fault.log
[]Catch up on the meetings
    - All hands (2023-09-18, specifically the bit about bikes), Sept Grad Forum (2023-09-06)
    - Learning Lunch on SOFE (15/08)
    - Tech Talk: My First Data Acquisition (16/08)
    - Fusion Forum: FjÃ¤rrstyrning, Tritium
[]elearning
[]Stick sticker back on shoe
    []Then return them
[]Write foilselector
    []Bateman/ whatever algorithm to solve the large decay problem
    []Upload to gitlab
    []Remove the part that requires the user to input something
    []step4 -> Ross
[]3D print:
    - toothbrush + safety razor stand; Air conditioner redirector; Parkour first-aid box closer, LED strip holder for mirror
[]Don't use the matrix multiplication form anymore - use a different method!
    []Determine the 3D, 5D? etc. area where the limit needs to be applied
    []Implement as python code
    - p.48, p.64 has the necessary info. to continue derivation
    - p.72+ has the relevant info to cross-check your matrix with/
[]Monitor LED strip/mirror extension
[]Cancel Amazon prime
Monday:
[]Buy bike
bm:
[]bluemira-training:
    - https://github.com/je-cook/bluemira-training
    []Install Rise
    []Add neutronics slide
        []open issue
Thesis:
[]/home/ocean/Self/PhDThesis/{to-do,organization}.txt
[]/home/ocean/Self/Productivity/Thesis/*.txt
Daily task: One novel thing per day:
[]One of the following learning things:
    []SeptembRSE https://docs.google.com/spreadsheets/d/1jX9VRxq1gI775YoLQz0lqA4UwDpTbxYpGvqvvZqYtTs/
    []http://software-training.gitpages.ccfe.ac.uk/software-best-practices/#32 (1 hour)
    []Social media & Sci+Math tab
Later:
[]Buy shoes and pants online (see mobile tabs and Google Keep)
[]All of the rest of the unfinished ideas in /home/ocean/Documents/PhD/unfinished-work.txt
[]Buy alternative keyboard(s)
[]Sign up for MIT/Cornell MOOC: Complex Analysis, Control theory
----Make the barrier to doing your fun recreational task as low as possible.
Interesting/recreational/entertaining:
[]Gravel convergence condition
[]Discrete calculus to prove Bateman equation stuff!
    - https://www.youtube.com/watch?v=D0EUFP7-P1M
[]vimtutor
[]Make arduino stuff: use temperature sensor
[]Read remaining books
    []Driver's education
[]Implementation of https://www.shadertoy.com/view/lltcWl with xscreensaver
fucking hell I could've used `ax.set_yscale('function', functions=[np.sqrt, lambda x:x**2])` all along
